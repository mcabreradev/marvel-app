{"version":3,"sources":["components/Error/index.js","utils/constants.js","components/Header/index.js","components/Character/index.js","components/CharacterDetails/index.js","components/Characters/index.js","components/Loading/index.js","components/Filters/index.js","store/actions/types.js","utils/api.js","containers/CharactersContainer/index.js","store/actions/index.js","containers/CharacterDetailsContainer/index.js","containers/App/index.js","containers/Root.js","serviceWorker.js","store/reducers/appReducers.js","store/reducers/charactersReducers.js","store/reducers/index.js","store/index.js","index.js"],"names":["Error","react_default","a","createElement","className","constants","app","name","version","api","host","publicKey","privateKey","ts","Date","now","styles","padding","Header","react_router_dom","to","concat","process","style","data-target","Character","_ref","id","thumbnail","comics","series","stories","events","src","path","extension","alt","available","Container","styled","div","_templateObject","CharacterDetails","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchCharacterByIdAction","match","params","_this$props","isLoading","character","length","_character$","description","urls","Fragment","components_Loading","isActive","items","map","comic","key","serie","storie","event","link","type","href","url","Component","Characters_templateObject","Characters","fetchCharactersAction","characters","renderLoading","Characters_Container","components_Character","assign","defaultProps","tryAgain","Loading","text","Filters","_this","onChange","bind","assertThisInitialized","e","target","setNameAction","value","placeholder","sortBy","APP","CHARACTERS","config","apikey","hash","md5","method","headers","Accept","get","endpoint","objectSpread","axios","getCharacters","mapActionToProps","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","response","wrap","_context","prev","next","payload","limit","sent","data","results","t0","console","error","stop","_x","_x2","apply","arguments","connect","state","characterId","_ref2","_callee2","_context2","getCharacter","log","_x3","_x4","App","components_Header","react_router","exact","component","CharactersContainer","CharacterDetailsContainer","Root","store","history","es","containers_App","Boolean","window","location","hostname","initialState","combineReducers","undefined","action","middleware","applyMiddleware","thunk","toConsumableArray","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","createBrowserHistory","ReactDOM","render","containers_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b9a8256.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = () => (\n    <h2 className=\"title is-2 has-text-grey has-text-centered\">404 NotFound</h2>\n);\n\nexport default Error;","export const constants = {\n  app: {\n    name: \"Marvel Superheroes\",\n    version:\"1.0.0\",\n  },\n  api: {\n    host: 'https://gateway.marvel.com/v1/public',\n    publicKey: '081757ccde0be78b0bf0c8a86cfc78a9',\n    privateKey: '7f7eec9323ff5708245de8880c255c940a728be8',\n    ts: Date.now()\n  }\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { constants } from \"../../utils/constants\";\n\nconst styles = {\n  padding: \"19px 0px 0px 0px\"\n};\n\nconst Header = () => (\n  <nav className=\"navbar is-fixed-top has-background-grey-darker\">\n    <div className=\"navbar-brand\">\n        <Link to={`${process.env.PUBLIC_URL}/`}><span className=\"navbar-item has-text-weight-semibold is-size-4 has-text-white\">{constants.app.name}</span></Link>\n        <small className=\"has-text-white\" style={styles}> v{constants.app.version}</small>\n        <div className=\"navbar-burger burger\" data-target=\"navMenuColorinfo-example\"> <span /> <span /> <span />\n        </div>\n    </div>\n\n    <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n        </div>\n    </div>\n  </nav>\n);\n\nexport default Header;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Character = ({id, name, thumbnail, comics, series, stories, events}) => (\n  <div className=\"column is-2-desktop is-3-tablet\">\n    <Link to={`${process.env.PUBLIC_URL}/characters/${id}`}>\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-square\">\n            <img src={thumbnail.path +'.'+ thumbnail.extension} alt={name + \" Placeholder\"} />\n          </figure>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"title is-6\">{ name }</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            { comics.available > 0 && (<span className=\"tag is-info\">{comics.available } comics</span>) }\n            { series.available > 0 && (<span className=\"tag is-success\">{series.available } series</span>) }\n            { stories.available > 0 && (<span className=\"tag is-warning\">{stories.available } stories</span>) }\n            { events.available> 0  && (<span className=\"tag is-danger\">{events.available } events</span>) }\n          </div>\n        </div>\n      </div>\n    </Link>\n  </div>\n);\n\nexport default Character;","/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Loading } from '../../components';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  top: 40px;\n  position: relative;\n`;\n\nclass CharacterDetails extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.fetchCharacterByIdAction(this.props.match.params.id);\n }\n\n  render() {\n    const { isLoading, character } = this.props;\n    if(character.length > 0){\n      const { name, thumbnail, comics, series, stories, events, description, urls } =character[0];\n\n      return (\n        <React.Fragment>\n          <Loading isActive={isLoading} />\n          <Container className=\"container\">\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <figure className=\"image is-4by3\">\n                  <img src={ thumbnail.path +'.'+ thumbnail.extension} alt={ name + \" Placeholder\" } />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p className=\"title is-4\">{ name }</p>\n                    <p className=\"subtitle is-6\">{ description }</p>\n                  </div>\n                </div>\n\n                <div className=\"content\">\n                  <div className=\"columns\">\n                    <div className=\"column is-one-quarter\">\n                      <h6>Comics</h6>\n                      <ul>\n                        {comics.items.map(comic => (<li className=\"is-size-7\" key={ comic.name }>{ comic.name} </li>))}\n                      </ul>\n                    </div>\n                    <div className=\"column is-one-quarter\">\n                      <h6>Series</h6>\n                      <ul>\n                      {series.items.map(serie => (<li className=\"is-size-7\" key={ serie.name }>{ serie.name} </li>))}\n                      </ul>\n                    </div>\n                    <div className=\"column is-one-quarter\">\n                      <h6>Stories</h6>\n                      <ul>\n                      {stories.items.map(storie => (<li className=\"is-size-7\" key={ storie.name }>{ storie.name} </li>))}\n                      </ul>\n                    </div>\n                    <div className=\"column is-one-quarter\">\n                      <h6>Events</h6>\n                      <ul>\n                      {events.items.map(event => (<li className=\"is-size-7\" key={ event.name }>{ event.name} </li>))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  <h6>Links</h6>\n                  <ul>\n                  {urls.map(link => (<li className=\"is-size-7\" key={ link.type }><a href={link.url}>{link.type}</a></li>))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Container>\n        </React.Fragment>\n        )\n    }\n    else {\n      return (\n        'Loading..'\n      )\n    }\n  }\n}\n\nexport default CharacterDetails;","/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Loading, Character } from '../../components';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  top: 40px;\n  position: relative;\n`;\n\nclass Characters extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.fetchCharactersAction();\n }\n\n  render() {\n    const { isLoading, characters, renderLoading } = this.props;\n\n    return (\n      <React.Fragment>\n        <Loading isActive={isLoading} />\n        <Container className=\"container\">\n          <div className=\"columns is-multiline\">\n          { characters.length ? characters.map(character => <Character {...character} key={character.id} />) : renderLoading }\n          </div>\n        </Container>\n      </React.Fragment>\n      )\n  }\n}\n\nCharacters.defaultProps = {\n  renderLoading: <div className=\"container\">loading...</div>,\n  tryAgain: <div className=\"container\">Character was not found!, try again</div>,\n};\n\nexport default Characters;","import React from 'react';\n\nconst Loading = ({text, isActive}) =>  (\n  <div className={\"pageloader has-background-grey-darker \" + ( isActive ? 'is-active' : '')}>\n    <span className=\"title\">{ text }</span>\n  </div>\n);\n\nLoading.defaultProps = {\n  text: \"Loading..\",\n  isActive: false\n};\n\nexport default Loading;","import React, { Component } from 'react';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    switch (e.target.name) {\n      case \"name\":\n        this.props.setNameAction(e.target.value);\n        break;\n\n      // case \"sortBy\":\n      //   this.props.setSortByAction(e.target.value);\n      //   break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"columns filters\">\n        <div className=\"field column is-7\">\n          <div className=\"control is-medium has-icons-right\">\n            <input\n              className=\"input is-medium\"\n              type=\"text\"\n              placeholder=\"write a name\"\n              name=\"name\"\n              value={name}\n              onChange={this.onChange}\n            />\n            <span className=\"icon is-medium is-right\">\n              <i className=\"fas fa-search\" />\n            </span>\n          </div>\n        </div>\n\n        {/* <div className=\"field column is-5 is-horizontal\">\n          <div className=\"field-label is-normal\">\n            <label className=\"label\">Sort By</label>\n          </div>\n          <div className=\"field-body\">\n            <div className=\"control is-expanded\">\n              <div className=\"select is-medium is-fullwidth\">\n                <select name=\"sortBy\" onChange={this.onChange}>\n                  <option value=\"\">\n                    {sortBy === \"\" ? \"Select\" : \"-- Reset Filter\"}\n                  </option>\n                  <option value=\"highest_rated\">Highest Rated</option>\n                  <option value=\"lower_rated\">Lower Rated</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n\n      </div>\n    );\n  }\n}\n\nFilters.defaultProps = {\n    name: \"\",\n    sortBy: \"\",\n};\n\nexport default Filters;\n","// Types\n\n// For APP\nexport const APP = {\n  TOGGLE_LOADING: \"TOGGLE_LOADING\"\n};\n\n// For CHARACTERS\nexport const CHARACTERS = {\n  FETCH_CHARACTERS: \"FETCH_CHARACTERS\",\n  FETCH_SINGLE_CHARACTER: \"FETCH_SINGLE_CHARACTER\",\n};","import axios from \"axios\";\nimport md5 from \"md5\";\nimport { constants } from \"./constants\";\n\nconst config = {\n  params: {\n    apikey: constants.api.publicKey,\n    hash: md5(\n      constants.api.ts + constants.api.privateKey + constants.api.publicKey\n    ),\n    ts: constants.api.ts\n  },\n  method: \"GET\",\n  headers: {\n    Accept: \"*/*\"\n  }\n};\n\n\nconst get = (endpoint, params) => {\n  // add customn params if needed\n  config.params  = {...config.params, ...params}\n\n  return axios.get(constants.api.host + endpoint, config)\n}\n\nexport const getCharacters = (params) => {\n\n  return get(\"/characters\", params)\n}\n\nexport const getCharacter = (id, params) => {\n\n  return get(\"/characters/\" + id, params)\n}\n","import { connect } from 'react-redux';\nimport { fetchCharactersAction } from '../../store/actions';\nimport { Characters } from '../../components';\n\nconst mapStateToProps = state => ({\n    isLoading: state.app.isLoading,\n    characters: state.characters.data,\n});\n\nconst mapActionToProps = {\n    fetchCharactersAction,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Characters);","import { APP, CHARACTERS } from \"./types\";\n\n// Utils\nimport { getCharacters, getCharacter } from \"../../utils/api\";\n\n// Actions\nexport const loadingAction = state => dispatch => {\n  try {\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: state\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetch characters\nexport const fetchCharactersAction = () => async (dispatch, getState) => {\n  dispatch({\n    type: APP.TOGGLE_LOADING,\n    payload: true\n  });\n\n  try {\n    const params = {\n      limit: 96\n    };\n    const response = await getCharacters(params);\n    const characters = response.data.data.results;\n\n    dispatch({\n      type: CHARACTERS.FETCH_CHARACTERS,\n      payload: characters\n    });\n\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  }\n};\n\nexport const fetchCharacterByIdAction= (characterId) => async (dispatch, getState) => {\n  dispatch({\n    type: APP.TOGGLE_LOADING,\n    payload: true\n  });\n\n  try {\n    const response = await getCharacter(characterId);\n    const character = response.data.data.results;\n    console.log(character);\n\n    dispatch({\n      type: CHARACTERS.FETCH_SINGLE_CHARACTER,\n      payload: character\n    });\n\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  }\n};\n","import { connect } from 'react-redux';\nimport { fetchCharacterByIdAction } from '../../store/actions';\nimport { CharacterDetails } from '../../components';\n\nconst mapStateToProps = state => ({\n  isLoading: state.app.isLoading,\n  character: state.characters.character,\n});\n\nconst mapActionToProps = {\n  fetchCharacterByIdAction,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(CharacterDetails);","import \"bulma/css/bulma.css\";\nimport \"bulma-extensions/dist/css/bulma-extensions.min.css\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { Header, Error } from \"../../components\";\nimport CharactersContainer from '../CharactersContainer';\nimport CharacterDetailsContainer from '../CharacterDetailsContainer';\nimport './styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Header/>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={CharactersContainer} />\n            <Route exact path={`${process.env.PUBLIC_URL}/characters`} component={CharactersContainer} />\n            <Route exact path={`${process.env.PUBLIC_URL}/characters/:id`} component={CharacterDetailsContainer} />\n            <Route component={Error} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nconst Root = ({ store, history }) => (\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>\n)\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { APP } from \"../actions/types\";\n\nconst initialState = {\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case APP.TOGGLE_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { CHARACTERS } from \"../actions/types\";\n\nconst initialState = {\n  data: [],\n  character: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CHARACTERS.FETCH_CHARACTERS:\n      return {\n        ...state,\n        data: action.payload\n      };\n\n    case CHARACTERS.FETCH_SINGLE_CHARACTER:\n      return {\n        ...state,\n        character: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport app from './appReducers';\nimport characters from './charactersReducers';\n\nexport default combineReducers({\n    app,\n    characters\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\n// const middleware = [thunk];\n\nconst middleware = [\n  applyMiddleware(thunk),\n  ...(window.__REDUX_DEVTOOLS_EXTENSION__ ? [window.__REDUX_DEVTOOLS_EXTENSION__()] : [])\n]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(...middleware)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from \"history\";\nimport Root from \"./containers/Root\";\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport store from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(<Root store={store} history={history} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}