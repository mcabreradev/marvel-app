{"version":3,"sources":["components/Error/index.js","utils/constants.js","components/Header/index.js","components/Characters/index.js","components/Loading/index.js","components/Filters/index.js","store/actions/types.js","utils/api.js","containers/CharactersContainer/index.js","store/actions/index.js","containers/App/index.js","containers/Root.js","serviceWorker.js","store/reducers/appReducers.js","store/reducers/charactersReducers.js","store/reducers/index.js","store/index.js","index.js"],"names":["Error","react_default","a","createElement","className","constants","app","name","version","api","host","publicKey","privateKey","ts","Date","now","styles","padding","Header","href","concat","process","style","data-target","Characters","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchCharactersAction","isLoading","Fragment","components_Loading","isActive","Component","Loading","text","defaultProps","Filters","_this","onChange","bind","assertThisInitialized","e","target","setNameAction","value","setSortByAction","_this$props","sortBy","type","placeholder","APP","CHARACTERS","config","params","apikey","hash","md5","method","headers","Accept","getAllCharacters","endpoint","objectSpread","axios","get","mapActionToProps","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","response","characters","wrap","_context","prev","next","payload","limit","sent","data","results","t0","console","error","stop","_x","_x2","apply","arguments","connect","state","App","components_Header","react_router_dom","react_router","exact","path","component","CharactersContainer","Root","store","history","es","containers_App","Boolean","window","location","hostname","match","initialState","combineReducers","length","undefined","action","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","createBrowserHistory","ReactDOM","render","containers_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15c0f5b4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = () => (\n    <h2 className=\"title is-2 has-text-grey has-text-centered\">404 NotFound</h2>\n);\n\nexport default Error;","export const constants = {\n  app: {\n    name: \"Marvel Superheroes\",\n    version:\"1.0.0\",\n  },\n  api: {\n    host: 'https://gateway.marvel.com/v1/public',\n    publicKey: '081757ccde0be78b0bf0c8a86cfc78a9',\n    privateKey: '7f7eec9323ff5708245de8880c255c940a728be8',\n    ts: Date.now()\n  }\n}\n","import React from 'react';\nimport { constants } from \"../../utils/constants\";\n\nconst styles = {\n  padding: \"19px 0px 0px 0px\"\n};\n\nconst Header = () => (\n  <nav className=\"navbar is-fixed-top has-background-grey-darker\">\n    <div className=\"navbar-brand\">\n        <a href={`${process.env.PUBLIC_URL}/`}><span className=\"navbar-item has-text-weight-semibold is-size-4 has-text-white\">{constants.app.name}</span></a>\n        <small className=\"has-text-white\" style={styles}> v{constants.app.version}</small>\n        <div className=\"navbar-burger burger\" data-target=\"navMenuColorinfo-example\"> <span /> <span /> <span />\n        </div>\n    </div>\n\n    <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n        </div>\n    </div>\n  </nav>\n);\n\nexport default Header;","/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Loading } from '../../components';\n\nclass Characters extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.fetchCharactersAction();\n }\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n          <React.Fragment>\n            <Loading isActive={isLoading} />\n            <h2 className=\"title is-2 has-text-grey has-text-centered\">Characters Component</h2>\n          </React.Fragment>\n      )\n  }\n\n}\n\nexport default Characters;","import React from 'react';\n\nconst Loading = (props) =>  (\n    <div className={\"pageloader has-background-grey-darker \" + ( props.isActive ? 'is-active' : '')}>\n        <span className=\"title\">{ props.text }</span>\n    </div>\n);\n\nLoading.defaultProps = {\n    text: \"Loading..\",\n    isActive: false\n};\n\nexport default Loading;","import React, { Component } from 'react';\n\nclass Filters extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n    \n    onChange(e) {\n        switch (e.target.name) {\n            case \"name\":\n                this.props.setNameAction(e.target.value);\n                break;\n            \n            case \"sortBy\":\n                this.props.setSortByAction(e.target.value);\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    render() { \n        const { name, sortBy } = this.props;\n\n        return (\n            <div className=\"columns filters\"> \n                <div className=\"field column is-7\">\n                    <div className=\"control is-medium has-icons-right\">\n                        <input className=\"input is-medium\" type=\"text\" placeholder=\"Restaurant or Address\" name=\"name\" value={ name } onChange={ this.onChange } />\n                        <span className=\"icon is-medium is-right\"><i className=\"fas fa-search\"></i></span>\n                    </div>\n                </div>\n\n                <div className=\"field column is-5 is-horizontal\">\n                    <div className=\"field-label is-normal\">\n                        <label className=\"label\">Sort By</label>\n                    </div>\n                    <div className=\"field-body\">\n                        <div className=\"control is-expanded\">\n                            <div className=\"select is-medium is-fullwidth\">\n                                <select name=\"sortBy\" onChange={ this.onChange } >\n                                    <option value=\"\">{ sortBy === \"\" ? \"Select\" : \"-- Reset Filter\" }</option>\n                                    <option value=\"highest_rated\">Highest Rated</option>\n                                    <option value=\"lower_rated\">Lower Rated</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nFilters.defaultProps = {  \n    name: \"\",\n    sortBy: \"\",\n};\n\nexport default Filters;\n","// Types\n\n// For APP\nexport const APP = {\n  TOGGLE_LOADING: \"TOGGLE_LOADING\"\n};\n\n// For CHARACTERS\nexport const CHARACTERS = {\n  FETCH_CHARACTERS: \"FETCH_CHARACTERS\",\n};","import axios from \"axios\";\nimport md5 from \"md5\";\nimport { constants } from \"./constants\";\n\nconst config = {\n  params: {\n    apikey: constants.api.publicKey,\n    hash: md5(\n      constants.api.ts + constants.api.privateKey + constants.api.publicKey\n    ),\n    ts: constants.api.ts\n  },\n  method: \"GET\",\n  headers: {\n    Accept: \"*/*\"\n  }\n};\n\n\nconst get = (endpoint, params) => {\n  // add customn params if needed\n  config.params  = {...config.params, ...params}\n\n  return axios.get(constants.api.host + endpoint, config)\n}\n\nexport const getAllCharacters = (params) => {\n\n  return get(\"/characters\", params)\n}\n","import { connect } from 'react-redux';\nimport { fetchCharactersAction } from '../../store/actions';\nimport { Characters } from '../../components';\n\nconst mapStateToProps = state => ({\n    isLoading: state.app.isLoading,\n});\n\nconst mapActionToProps = {\n    fetchCharactersAction,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Characters);","import { APP, CHARACTERS } from \"./types\";\n\n// Utils\nimport { getAllCharacters } from \"../../utils/api\";\n\n// Actions\nexport const loadingAction = state => dispatch => {\n  try {\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: state\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetch characters\nexport const fetchCharactersAction = () => async (dispatch, getState) => {\n  dispatch({\n    type: APP.TOGGLE_LOADING,\n    payload: true\n  });\n\n  try {\n    const params = {\n      limit: 30\n    };\n    const response = await getAllCharacters(params);\n    const characters = response.data.data.results;\n\n    dispatch({\n      type: CHARACTERS.FETCH_CHARACTERS,\n      payload: characters\n    });\n\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: APP.TOGGLE_LOADING,\n      payload: false\n    });\n  }\n};\n","import \"bulma/css/bulma.css\";\nimport \"bulma-extensions/dist/css/bulma-extensions.min.css\";\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { Header, Error } from \"../../components\";\nimport CharactersContainer from '../CharactersContainer';\n\nimport './styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Router>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={CharactersContainer} />\n            {/* <Route exact path={`${process.env.PUBLIC_URL}/restaurants`} component={CharactersContainer} />\n            <Route exact path={`${process.env.PUBLIC_URL}/restaurants/:id`} component={OrderContainer} /> */}\n            <Route component={Error} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nconst Root = ({ store, history }) => (\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>\n)\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { APP } from \"../actions/types\";\n\nconst initialState = {\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case APP.TOGGLE_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { CHARACTERS } from \"../actions/types\";\n\nconst initialState = {\n  data: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CHARACTERS.FETCH_CHARACTERS:\n      return {\n        ...state,\n        data: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport app from './appReducers';\nimport characters from './charactersReducers';\n\nexport default combineReducers({\n    app,\n    characters\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from \"history\";\nimport Root from \"./containers/Root\";\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport store from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(<Root store={store} history={history} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}